name: Deploy to GitHub Pages

# Run workflow on every push to the main branch
on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy-to-github-pages:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Install .NET Core SDK
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Install Node.js for TailwindCSS
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Install npm dependencies
      - name: Install npm dependencies
        run: npm install

      # Build TailwindCSS
      - name: Build TailwindCSS
        run: npx tailwindcss -i ./wwwroot/css/app.css -o ./wwwroot/css/tailwind.css --minify

      # Publish the app
      - name: Publish .NET Core Project
        run: dotnet publish SkopeoWebsite.csproj -c Release -o release --nologo
        
      # Change base-tag in index.html from / to Skopeo to match GitHub Pages repository subdirectory
      - name: Change base-tag in index.html
        run: sed -i 's/<base href="\/" \/>/<base href="\/Skopeo\/" \/>/g' release/wwwroot/index.html
        
      # Copy index.html to 404.html to serve the same file when a file is not found
      - name: copy index.html to 404.html to serve the same file when a file is not found
        run: cp release/wwwroot/index.html release/wwwroot/404.html

      # Add .nojekyll file to tell GitHub Pages to not treat this as a Jekyll project
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
        
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: release/wwwroot