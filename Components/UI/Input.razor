<input class="@GetClasses()" 
       type="@Type" 
       placeholder="@Placeholder" 
       @bind="@Value" 
       @bind:event="oninput"
       disabled="@Disabled"
       @attributes="AdditionalAttributes" />

@code {
    [Parameter] public string? Value { get; set; }
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public string Type { get; set; } = "text";
    [Parameter] public string? Placeholder { get; set; }
    [Parameter] public bool Disabled { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object>? AdditionalAttributes { get; set; }

    private string GetClasses()
    {
        var classes = new List<string>
        {
            "block",
            "w-full",
            "px-4",
            "py-3",
            "border",
            "border-gray-300",
            "rounded-lg",
            "focus:ring-2",
            "focus:ring-blue-500",
            "focus:border-blue-500",
            "transition-colors",
            "duration-200",
            "placeholder-gray-400"
        };

        if (Disabled)
        {
            classes.AddRange(new[] { "opacity-50", "cursor-not-allowed", "bg-gray-50" });
        }

        return string.Join(" ", classes);
    }
}
