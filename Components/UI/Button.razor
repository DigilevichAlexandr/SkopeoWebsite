@using Microsoft.AspNetCore.Components.Web

<button class="@GetClasses()" @onclick="OnClick" @attributes="AdditionalAttributes">
    @ChildContent
</button>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }
    [Parameter] public ButtonVariant Variant { get; set; } = ButtonVariant.Primary;
    [Parameter] public ButtonSize Size { get; set; } = ButtonSize.Medium;
    [Parameter] public bool Disabled { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object>? AdditionalAttributes { get; set; }

    private string GetClasses()
    {
        var classes = new List<string>
        {
            "inline-flex",
            "items-center",
            "justify-center",
            "font-medium",
            "rounded-lg",
            "transition-all",
            "duration-300",
            "focus:outline-none",
            "focus:ring-2",
            "focus:ring-offset-2"
        };

        // Variant styles
        classes.AddRange(Variant switch
        {
            ButtonVariant.Primary => new[] { "bg-gradient-to-r", "from-cyan-500", "to-blue-600", "text-white", "hover:from-cyan-600", "hover:to-blue-700", "hover:shadow-2xl", "hover:scale-105", "focus:ring-cyan-500", "shadow-lg", "border-0" },
            ButtonVariant.Secondary => new[] { "bg-white/20", "backdrop-blur-md", "text-gray-700", "border", "border-white/30", "hover:bg-white/30", "hover:shadow-xl", "hover:scale-105", "focus:ring-gray-500" },
            ButtonVariant.Outline => new[] { "border-2", "border-cyan-500", "text-cyan-600", "bg-transparent", "hover:bg-cyan-500", "hover:text-white", "hover:shadow-xl", "hover:scale-105", "focus:ring-cyan-500" },
            ButtonVariant.Ghost => new[] { "text-gray-600", "hover:bg-white/10", "hover:text-gray-900", "hover:scale-105", "focus:ring-gray-500", "backdrop-blur-md" },
            ButtonVariant.Danger => new[] { "bg-gradient-to-r", "from-red-500", "to-pink-600", "text-white", "hover:from-red-600", "hover:to-pink-700", "hover:shadow-2xl", "hover:scale-105", "focus:ring-red-500", "shadow-lg" },
            ButtonVariant.Success => new[] { "bg-gradient-to-r", "from-green-500", "to-emerald-600", "text-white", "hover:from-green-600", "hover:to-emerald-700", "hover:shadow-2xl", "hover:scale-105", "focus:ring-green-500", "shadow-lg" },
            _ => new[] { "bg-gradient-to-r", "from-cyan-500", "to-blue-600", "text-white", "hover:from-cyan-600", "hover:to-blue-700", "hover:shadow-2xl", "hover:scale-105", "focus:ring-cyan-500", "shadow-lg", "border-0" }
        });

        // Size styles
        classes.AddRange(Size switch
        {
            ButtonSize.Small => new[] { "px-3", "py-2", "text-sm" },
            ButtonSize.Medium => new[] { "px-6", "py-3", "text-base" },
            ButtonSize.Large => new[] { "px-8", "py-4", "text-lg" },
            _ => new[] { "px-6", "py-3", "text-base" }
        });

        if (Disabled)
        {
            classes.AddRange(new[] { "opacity-50", "cursor-not-allowed" });
        }

        return string.Join(" ", classes);
    }

    public enum ButtonVariant
    {
        Primary,
        Secondary,
        Outline,
        Ghost,
        Danger,
        Success
    }

    public enum ButtonSize
    {
        Small,
        Medium,
        Large
    }
}
